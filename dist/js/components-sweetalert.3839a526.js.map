{"version":3,"file":"js/components-sweetalert.3839a526.js","mappings":"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","sources":["webpack://cork-vue3/./node_modules/core-js/modules/es.array.includes.js","webpack://cork-vue3/./src/views/components/sweetalert.vue","webpack://cork-vue3/./src/views/components/sweetalert.vue?567b"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","<template>\n    <div class=\"container\">\n        <teleport to=\"#breadcrumb\">\n            <ul class=\"navbar-nav flex-row\">\n                <li>\n                    <div class=\"page-header\">\n                        <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Components</a></li>\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Sweet Alerts</span></li>\n                            </ol>\n                        </nav>\n                    </div>\n                </li>\n            </ul>\n        </teleport>\n\n        <div class=\"container\">\n            <div id=\"navSection\" class=\"nav sidenav\">\n                <div class=\"sidenav-content\" v-scroll-spy-active v-scroll-spy-link>\n                    <a href=\"#sweetalertbasic\" class=\"nav-link\">Basic</a>\n                    <a href=\"#sweetalertmessage\" class=\"nav-link\">Message</a>\n                    <a href=\"#sweetalertdynamic\" class=\"nav-link\">Dynamic</a>\n                    <a href=\"#sweetalertatitlewithtext\" class=\"nav-link\">A title with text</a>\n                    <a href=\"#sweetalertchainingmodals\" class=\"nav-link\">Chaining modals</a>\n                    <a href=\"#sweetalertanimation\" class=\"nav-link\">Animation</a>\n                    <a href=\"#sweetalertautoclosetimer\" class=\"nav-link\">Auto close timer</a>\n                    <a href=\"#sweetalertcustomimage\" class=\"nav-link\">Custom image</a>\n                    <a href=\"#sweetalertcustomhtml\" class=\"nav-link\">Custom HTML</a>\n                    <a href=\"#sweetalertwarningmessage\" class=\"nav-link\">Warning message</a>\n                    <a href=\"#sweetalertcancel\" class=\"nav-link\">Cancel</a>\n                    <a href=\"#sweetalertcustomstyle\" class=\"nav-link\">Custom Style</a>\n                    <a href=\"#sweetalertfooter\" class=\"nav-link\">Footer</a>\n                    <a href=\"#sweetalertrtl\" class=\"nav-link\">RTL</a>\n                    <a href=\"#sweetalertmixin\" class=\"nav-link\">Mixin</a>\n                </div>\n            </div>\n            <div class=\"row layout-top-spacing\">\n                <div class=\"col-12\">\n                    <div class=\"alert alert-arrow-left alert-icon-left alert-light-info mb-0 text-break\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"feather feather-bell\"\n                        >\n                            <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                            <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                        </svg>\n                        Documentation:\n                        <a target=\"_blank\" href=\"https://www.npmjs.com/package/vue-sweetalert2\" class=\"text-info\"> https://www.npmjs.com/package/vue-sweetalert2 </a>\n                    </div>\n                </div>\n            </div>\n            <div v-scroll-spy class=\"row layout-top-spacing\">\n                <div id=\"sweetalertbasic\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Basic message</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(1)\">Basic message</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code1')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code1')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(1)&quot;&gt;Basic message&lt;/button&gt;\n\n new window.Swal({\n    title: 'Saved succesfully',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertmessage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Success message</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(2)\">Success message!</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code2')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code2')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(2)&quot;&gt;Success message!&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'success',\n    title: 'Good job!',\n    text: 'You clicked the!',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertdynamic\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Dynamic queue</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(3)\">Dynamic queue</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code3')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code3')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(3)&quot;&gt;Dynamic queue&lt;/button&gt;\n\nconst ipAPI = 'https://api.ipify.org?format=json';\nnew window.Swal({\n    title: 'Your public IP',\n    confirmButtonText: 'Show my public IP',\n    text: 'Your public IP will be received ' + 'via AJAX request',\n    showLoaderOnConfirm: true,\n    preConfirm: () =&gt; {\n        return fetch(ipAPI)\n            .then(response =&gt; {\n                return response.json();\n            })\n            .then(data =&gt; {\n                new window.Swal({\n                    title: data.ip\n                });\n            })\n            .catch(() =&gt; {\n                new window.Swal({\n                    type: 'error',\n                    title: 'Unable to get your public IP'\n                });\n            });\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertatitlewithtext\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>A title with a text under</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(4)\">Title & text</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code4')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code4')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(4)&quot;&gt;Title &amp; text&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'question',\n    title: 'The Internet?',\n    text: 'That thing is still around?',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertchainingmodals\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Chaining modals (queue)</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(5)\">Chaining modals (queue)</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code5')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code5')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(5)&quot;&gt;Chaining modals (queue)&lt;/button&gt;\n\nconst steps = ['1', '2', '3'];\nconst swalQueueStep =  window.Swal.mixin({\n    confirmButtonText: 'Next &rarr;',\n    showCancelButton: true,\n    progressSteps: steps,\n    input: 'text',\n    inputAttributes: {\n        required: true\n    },\n    validationMessage: 'This field is required',\n    padding: '2em'\n});\n\nconst values = [];\nlet currentStep;\n\nfor (currentStep = 0; currentStep &lt; steps.length; ) {\n    const result = await swalQueueStep.fire({\n        title: `Question ${steps[currentStep]}`,\n        text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\n        inputValue: values[currentStep],\n        showCancelButton: currentStep &gt; 0,\n        currentProgressStep: currentStep\n    });\n\n    if (result.value) {\n        values[currentStep] = result.value;\n        currentStep++;\n    } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\n        currentStep--;\n    } else {\n        break;\n    }\n}\n\nif (currentStep === steps.length) {\n    new window.Swal.fire({\n        title: 'All done!',\n        padding: '2em',\n        html: 'Your answers: &lt;pre&gt;' + JSON.stringify(values) + '&lt;/pre&gt;',\n        confirmButtonText: 'Lovely!'\n    });\n}\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertanimation\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Custom animation</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(6)\">Custom animation</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code6')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code6')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(6)&quot;&gt;Custom animation&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Custom animation with Animate.css',\n    animation: false,\n    customClass: 'animated tada',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertautoclosetimer\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Message with auto close timer</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(7)\">Message timer</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code7')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code7')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(7)&quot;&gt;Message timer&lt;/button&gt;\n\nlet timerInterval;\n\nnew window.Swal({\n    title: 'Auto close alert!',\n    html: 'I will close in &lt;b&gt;&lt;/b&gt; milliseconds.',\n    timer: 2000,\n    timerProgressBar: true,\n    didOpen: () =&gt; {\n        new window.Swal.showLoading();\n        const b = new window.Swal.getHtmlContainer().querySelector('b');\n        timerInterval = setInterval(() =&gt; {\n            b.textContent = new window.Swal.getTimerLeft();\n        }, 100);\n    },\n    willClose: () =&gt; {\n        clearInterval(timerInterval);\n    }\n}).then((result)=> {\n    if (result.dismiss === new window.Swal.DismissReason.timer) {\n        console.log('I was closed by the timer');\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomimage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Message with custom image</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(8)\">Message with custom image</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code8')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code8')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(8)&quot;&gt;Message with custom image&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Sweet!',\n    text: 'Modal with a custom image.',\n    imageUrl: require('@/assets/images/thumbs-up.jpg'),\n    imageWidth: 224,\n    imageHeight: 200,\n    imageAlt: 'Custom image',\n    animation: false,\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomhtml\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Custom HTML description and buttons</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(9)\">Custom Description & buttons</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code9')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code9')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(9)&quot;&gt;Custom Description &amp; buttons&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'info',\n    title: '&lt;i&gt;HTML&lt;/i&gt; &lt;u&gt;example&lt;/u&gt;',\n    html: 'You can use &lt;b&gt;bold text&lt;/b&gt;, ' + '&lt;a href=&quot;//github.com&quot;&gt;links&lt;/a&gt; ' + 'and other HTML tags',\n    showCloseButton: true,\n    showCancelButton: true,\n    focusConfirm: false,\n    confirmButtonText: '&lt;i class=&quot;flaticon-checked-1&quot;&gt;&lt;/i&gt; Great!',\n    confirmButtonAriaLabel: 'Thumbs up, great!',\n    cancelButtonText: '&lt;i class=&quot;flaticon-cancel-circle&quot;&gt;&lt;/i&gt; Cancel',\n    cancelButtonAriaLabel: 'Thumbs down',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertwarningmessage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Warning message, with \"Confirm\" button</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(10)\">Confirm</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code10')\"><span>Confirm</span></button>\n\n                                <div v-if=\"code_arr.includes('code10')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(10)&quot;&gt;Confirm&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Are you sure?',\n    text: &quot;You won't be able to revert this!&quot;,\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Delete',\n    padding: '2em'\n}).then(result =&gt; {\n    if (result.value) {\n        new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcancel\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Execute something else for \"Cancel\".</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(11)\">Addition else for \"Cancel\".</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code11')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code11')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(11)&quot;&gt;Addition else for &quot;Cancel&quot;.&lt;/button&gt;\n\nconst swalWithBootstrapButtons =  window.Swal.mixin({\n    confirmButtonClass: 'btn btn-secondary',\n    cancelButtonClass: 'btn btn-dark me-3',\n    buttonsStyling: false\n});\nswalWithBootstrapButtons\n    .fire({\n        title: 'Are you sure?',\n        text: &quot;You won't be able to revert this!&quot;,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        cancelButtonText: 'No, cancel!',\n        reverseButtons: true,\n        padding: '2em'\n    })\n    .then(result =&gt; {\n        if (result.value) {\n            swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\n        } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\n            swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n        }\n    });\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomstyle\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>A message with custom width, padding and background</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(12)\">Custom Message</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code12')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code12')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(12)&quot;&gt;Custom Message&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Custom width, padding, background.',\n    width: 600,\n    padding: '7em',\n    customClass: 'background-modal',\n    background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertfooter\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>With Footer</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(13)\">With Footer</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code13')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code13')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(13)&quot;&gt;With Footer&lt;/button&gt;\n\nnew window.Swal({\n    type: 'error',\n    title: 'Oops...',\n    text: 'Something went wrong!',\n    footer: '&lt;a href&gt;Why do I have this issue?&lt;/a&gt;',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertrtl\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>RTL Support</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(14)\">RTL</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code14')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code14')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(14)&quot;&gt;RTL&lt;/button&gt;\n\nnew window.Swal({\n    title: 'هل تريد الاستمرار؟',\n    confirmButtonText: 'نعم',\n    cancelButtonText: 'لا',\n    showCancelButton: true,\n    showCloseButton: true,\n    padding: '2em',\n    target: document.getElementById('rtl-container')\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertmixin\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Mixin</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(15)\">Mixin</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code15')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code15')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(15)&quot;&gt;Mixin&lt;/button&gt;\n\nconst toast =  window.Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    padding: '2em'\n});\ntoast.fire({\n    icon: 'success',\n    title: 'Signed in successfully',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import { ref } from 'vue';\n    import '@/assets/sass/scrollspyNav.scss';\n    import '@/assets/sass/components/custom-sweetalert.scss';\n    import highlight from '@/components/plugins/highlight.vue';\n\n    import { useMeta } from '@/composables/use-meta';\n    useMeta({ title: 'Sweet Alert' });\n\n    const code_arr = ref([]);\n    const toggleCode = (name) => {\n        if (code_arr.value.includes(name)) {\n            code_arr.value = code_arr.value.filter((d) => d != name);\n        } else {\n            code_arr.value.push(name);\n        }\n    };\n\n    const showAlert = async (type) => {\n        if (type === 1) {\n            new window.Swal({\n                title: 'Saved succesfully',\n                padding: '2em',\n            });\n        } else if (type === 2) {\n            new window.Swal({\n                icon: 'success',\n                title: 'Good job!',\n                text: 'You clicked the!',\n                padding: '2em',\n            });\n        } else if (type === 3) {\n            const ipAPI = 'https://api.ipify.org?format=json';\n            new window.Swal({\n                title: 'Your public IP',\n                confirmButtonText: 'Show my public IP',\n                text: 'Your public IP will be received ' + 'via AJAX request',\n                showLoaderOnConfirm: true,\n                preConfirm: () => {\n                    return fetch(ipAPI)\n                        .then((response) => {\n                            return response.json();\n                        })\n                        .then((data) => {\n                            new window.Swal({\n                                title: data.ip,\n                            });\n                        })\n                        .catch(() => {\n                            new window.Swal({\n                                type: 'error',\n                                title: 'Unable to get your public IP',\n                            });\n                        });\n                },\n            });\n        } else if (type === 4) {\n            new window.Swal({\n                icon: 'question',\n                title: 'The Internet?',\n                text: 'That thing is still around?',\n                padding: '2em',\n            });\n        } else if (type === 5) {\n            const steps = ['1', '2', '3'];\n            const swalQueueStep = window.Swal.mixin({\n                confirmButtonText: 'Next →',\n                showCancelButton: true,\n                progressSteps: steps,\n                input: 'text',\n                inputAttributes: {\n                    required: true,\n                },\n                validationMessage: 'This field is required',\n                padding: '2em',\n            });\n\n            const values = [];\n            let currentStep;\n\n            for (currentStep = 0; currentStep < steps.length; ) {\n                const result = await swalQueueStep.fire({\n                    title: `Question ${steps[currentStep]}`,\n                    text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\n                    inputValue: values[currentStep],\n                    showCancelButton: currentStep > 0,\n                    currentProgressStep: currentStep,\n                });\n\n                if (result.value) {\n                    values[currentStep] = result.value;\n                    currentStep++;\n                } else if (result.dismiss === new window.Swal.DismissReason.cancel()) {\n                    currentStep--;\n                } else {\n                    break;\n                }\n            }\n\n            if (currentStep === steps.length) {\n                window.Swal.fire({\n                    title: 'All done!',\n                    padding: '2em',\n                    html: 'Your answers: <pre>' + JSON.stringify(values) + '</pre>',\n                    confirmButtonText: 'Lovely!',\n                });\n            }\n        } else if (type === 6) {\n            new window.Swal({\n                title: 'Custom animation with Animate.css',\n                animation: false,\n                customClass: 'animated tada',\n                padding: '2em',\n            });\n        } else if (type === 7) {\n            let timerInterval;\n\n            new window.Swal({\n                title: 'Auto close alert!',\n                html: 'I will close in <b></b> milliseconds.',\n                timer: 2000,\n                timerProgressBar: true,\n                didOpen: () => {\n                    window.Swal.showLoading();\n                    const b = window.Swal.getHtmlContainer().querySelector('b');\n                    timerInterval = setInterval(() => {\n                        b.textContent = window.Swal.getTimerLeft();\n                    }, 100);\n                },\n                willClose: () => {\n                    clearInterval(timerInterval);\n                },\n            }).then((result) => {\n                if (result.dismiss === window.Swal.DismissReason.timer) {\n                    console.log('I was closed by the timer');\n                }\n            });\n        } else if (type === 8) {\n            new window.Swal({\n                title: 'Sweet!',\n                text: 'Modal with a custom image.',\n                imageUrl: require('@/assets/images/thumbs-up.jpg'),\n                imageWidth: 224,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                animation: false,\n                padding: '2em',\n            });\n        } else if (type === 9) {\n            new window.Swal({\n                icon: 'info',\n                title: '<i>HTML</i> <u>example</u>',\n                html: 'You can use <b>bold text</b>, ' + '<a href=\"//github.com\">links</a> ' + 'and other HTML tags',\n                showCloseButton: true,\n                showCancelButton: true,\n                focusConfirm: false,\n                confirmButtonText: '<i class=\"flaticon-checked-1\"></i> Great!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n                cancelButtonText: '<i class=\"flaticon-cancel-circle\"></i> Cancel',\n                cancelButtonAriaLabel: 'Thumbs down',\n                padding: '2em',\n            });\n        } else if (type === 10) {\n            new window.Swal({\n                icon: 'warning',\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                showCancelButton: true,\n                confirmButtonText: 'Delete',\n                padding: '2em',\n            }).then((result) => {\n                if (result.value) {\n                    new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\n                }\n            });\n        } else if (type === 11) {\n            const swalWithBootstrapButtons = window.Swal.mixin({\n                confirmButtonClass: 'btn btn-secondary',\n                cancelButtonClass: 'btn btn-dark me-3',\n                buttonsStyling: false,\n            });\n            swalWithBootstrapButtons\n                .fire({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Yes, delete it!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    padding: '2em',\n                })\n                .then((result) => {\n                    if (result.value) {\n                        swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\n                    } else if (result.dismiss === window.Swal.DismissReason.cancel) {\n                        swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n                    }\n                });\n        } else if (type === 12) {\n            new window.Swal({\n                title: 'Custom width, padding, background.',\n                width: 600,\n                padding: '7em',\n                customClass: 'background-modal',\n                background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%',\n            });\n        } else if (type === 13) {\n            new window.Swal({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong!',\n                footer: '<a href>Why do I have this issue?</a>',\n                padding: '2em',\n            });\n        } else if (type === 14) {\n            new window.Swal({\n                title: 'هل تريد الاستمرار؟',\n                confirmButtonText: 'نعم',\n                cancelButtonText: 'لا',\n                showCancelButton: true,\n                showCloseButton: true,\n                padding: '2em',\n                target: document.getElementById('rtl-container'),\n            });\n        } else if (type === 15) {\n            const toast = window.Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000,\n                padding: '2em',\n            });\n            toast.fire({\n                icon: 'success',\n                title: 'Signed in successfully',\n                padding: '2em',\n            });\n        }\n    };\n</script>\n","import script from \"./sweetalert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./sweetalert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["$","$includes","fails","addToUnscopables","BROKEN_ON_SPARSE","Array","includes","target","proto","forced","el","this","arguments","length","undefined","useMeta","title","code_arr","ref","toggleCode","name","value","filter","d","push","showAlert","async","type","window","Swal","padding","icon","text","ipAPI","confirmButtonText","showLoaderOnConfirm","preConfirm","fetch","then","response","json","data","ip","catch","steps","swalQueueStep","mixin","showCancelButton","progressSteps","input","inputAttributes","required","validationMessage","values","currentStep","result","fire","inputValue","currentProgressStep","dismiss","DismissReason","cancel","html","JSON","stringify","animation","customClass","timerInterval","timer","timerProgressBar","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","console","log","imageUrl","require","imageWidth","imageHeight","imageAlt","showCloseButton","focusConfirm","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","swalWithBootstrapButtons","confirmButtonClass","cancelButtonClass","buttonsStyling","reverseButtons","width","background","footer","document","getElementById","toast","position","showConfirmButton","__exports__"],"sourceRoot":""}